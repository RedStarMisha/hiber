Объект - файл и любые метаданные
Бакеты - контейнеры для объектов в хранилище. Можно сохранить какое угдно количество файлов в бакет. Дефолтная кводта на бакеты - 10000, можно расширить
    Правила нейминга бакетов:
        от 3 до 63 символов
        строчные буквы, цифры, точки и дефисы
Первым делом создается бакет. Затем можно загрузить объект.
бакеты нужны : 1) огранизация пространства имен 2) определения учетной записи ответсвенной за изменение данных 3) политика доступа 4) единица агрегации
Метаданные - пары K-V которые описывают объект. есть дефольные метаданные. можно указать свои
Объекты записываются в корзину по ключу. Ключи - уникальные идентификаторы. используется сочетание бакет + ключ + версия(опционально) для однозначного определения карты доступа к объекту
Можно хранить несколько версий объектов. добавляется к файлу идентификатор версии. Это нужно включать. если файлы были загружены до включения этой функции идентификатор равен null.
Политика Identity and Access Management (IAM) - json файл с политикой доступа к корзине. Данная политика применяется к не владельцам
Access point - конечные точки доступа к данным с выделенными политиками (Block Public Access)

Объекты - макс объем 5 гб за один запрос. если файл больше, то нужно делать многокомпонентную загрузку
Ключ - имя которое мы назначаем объекту
Идентификатор версии - для версионирования объектов
Метаданные - пары ключ\значение. Есть пользовательские и системные
Тэги - дополнительный способ маркировать объекты

Ключи
    Иерархии на уровне подпапок нет, но можно логическую сделать иерархию с помощью разделителей
    folder1/file1.pfd
    Имена ключей которые не стоит применять: &, $, !, =, ;, /, :, +, запятая, ?, \, {, ^, }, %, ], [, ", > , <, #

Метаданные. ЗАписываются при загрузки файла, поменять их нельзя (только если перекопировать объект)
    - системные: дата создания объекта, размер и класс хранения, Content-Type
    - пользовательские: Можно добавлять их в header http запроса. стоит добавлять префикс x-amz-meta- в
    рест запросе чтобы их можно было отличать. в s3 хранятся в lowercase

Многокомпонентная загрузка лучше для файлов большее 100мб.
При одновременной многокомонентной загрузке и включенном версионировании последней версией будет
так загрузка которая началась позже(а не закончилась)

